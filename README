Государственное бюджетное общеобразовательное учреждение города Москвы «Школа № 192»









Финансовый помощник 
“КОШЕЛЬКОВАЯ МЫШЬ”.








Ученик 10в класса “Школы № 192”
Десятов Дмитрий Владимирович

руководитель: учитель информатики
Москва “Школа № 192”
Бонвеч Елена Алексеевна 




Москва, 2024
Оглавление
Оглавление	2
Введение	2
Цель и задачи	2
Методика выполнения работы:	3
● Получение информации о тратах	3
● Запись информации в базу данных	4
● Обработка информации базы данных	4
● Создание оповещений	5
Команды, которые может передавать пользователь:	5
Результаты	7
Список использованной литературы	7
Введение
Моя сестра часто по работе ездит в разные страны. Она следит за своими тратами, чтобы лучше распоряжаться деньгами. Обычно подсчет ведет банк, картой которого она пользуется. Однако в разных странах принимают свои карты и ей приходится использовать разные карты, поэтому ей нужно отдельное приложение для подсчета расходов. Обычно сестра пользуется специальными приложениями, однако они занимают много места в памяти телефона, а подключение второго пользователя, который может также взаимодействовать с данными, возможно только по подписке. Моя сестра периодически перемещается с мужем, но она не готова оплачивать подписку, поэтому я решил создать телеграм-бота, помогающего держать расходы под контролем.
Цель и задачи
Целью проекта является создание телеграм-бота, помогающего отслеживать затраты.
Основные задачи, которые нужно реализовать:
Получение информации о тратах
Запись информации в базу данных
Обработка информации базы данных
Создание оповещений
Методика выполнения работы: 
Получение информации о тратах
Получение информации происходит через строку шаблона: “<стоимость покупки> <валюта> <наименование покупки> <категория, к которой отнести покупку>” без кавычек, в треугольных скобках соответствующая информация. Основные параметры: стоимость покупки, наименование покупки; остальные можно задать функциями /set_currency и /set_category.

Запись информации в базу данных
Обработанное сообщение от пользователя записывается в csv файл, к сообщению добавляются дополнительные параметры дата, имя пользователя. Также существует возможность переноса данных в Google Sheets.
Параметры csv файла:
date - год-месяц-день
cost - стоимость покупки
currency - валюта
product - наименование покупки
category - категория
buyer - имя пользователя
Обработка информации базы данных
С помощью библиотеки “pandas” происходит обработка базы данных и визуализация с помощью библиотеки “seaborn” по команде от пользователя.
Можно получить для каждого пользователя отдельно или вместе:
Минимальные, максимальные, суммарные, в среднем затраты за последние n дней, где n - вводится пользователем, за этот год, месяц, эту неделю. Также присылается график затрат.
Минимальные, максимальные; суммарные, в среднем затраты в категории. Также присылается график затрат.
Пример получения информации:

Создание оповещений
Можно задать границу суммарной стоимости покупок в категории или за кол-во дней, месяцев, при приближении к которой будет приходить оповещение. Оповещение состоит из текста и графика количества покупок и затрат в категории(-ях), количества дней до окончания оповещения.

Команды, которые может передавать пользователь:
/start
Приветствие, краткое описание бота и его функций, задание имени, которым бот будет обращаться к пользователю.
/help
Выводит все команды, которые может давать пользователь.
/message
Описание того, как правильно вводить текст для добавления данных в базу, также описание функций, позволяющих изменять параметры по умолчанию.
/set_currency
Установить валюту по умолчанию.
/set_category
Установить категорию по умолчанию.
/set_name
Установить имя по умолчанию.
/get_info
Выбор информация от какого или каких пользователей будет обрабатываться информация. Далее выбор команд получения информации
/info_for_time
Получить информацию за время, далее вводится за какой период.
/info_of_category
Получить информацию по категории, далее вводится по какой категории и за какой период времени.
/alert
Получение информации обо всех, созданных оповещениях. Информация о командах для настройки оповещений.
/make_alert
Создание оповещения о приближении к лимиту и превышении лимита трат в категории за промежуток времени.
/del_alert
Удаление выбранного оповещения.
/google_sheets
Настройка переноса данных в Google Sheets.
Результаты
Результатом проекта является телеграм-бот, помогающий отслеживать затраты. Он может создавать и обрабатывать базу данных затрат, а также выдавать и визуализировать результат обработки данных.




Можно легко и быстро добавлять и удалять информацию, за пару команд узнать и увидеть сколько и на что потратил. Множество полезных функций, при том, что пользоваться приложением может даже ребёнок.
Пару слов о перспективах развития и применении. Очевидной перспективой развития является создание иерархии, когда руководитель отдела финансов компании может отслеживать мелкие расходы своих сотрудников, или создание отдельного телеграм-канала, в который с определенной периодичностью будет приходить отчет обо всех мелких тратах сотрудников. Также можно добавить конвертацию введенной валюты в другую, обеспечивая понятность затрат в данной стране в сравнении с другими.
Кроме первоначальной идеи подсчета затрат в разных странах, моего телеграм-бота можно использовать для контроля расходов, если пользователь постоянно проживает в одной стране. Еще одним вариантом использования бота является подсчет действий, совершаемых с неопределенной периодичностью, например, в некотором офисе есть свой буфет с бесплатным угощением для работников, но он заканчивается слишком быстро. Чтобы понять, в какие дни чаще всего в нем едят, можно попросить работников передавать боту, когда они берут сладость, если установить валютой по умолчанию “штук”. Так можно узнать, в какие дни стоит увеличить запасы буфета.
Список использованной литературы
Python 3.12.2 documentation https://docs.python.org/3/index.html
pyTelegramBotAPI Documentation 4.15.4 documentation https://pytba.readthedocs.io/en/latest/index.html
statistical data visualization — seaborn 0.13.2 documentation https://seaborn.pydata.org
Matplotlib 3.8.3 documentation https://matplotlib.org/stable/
Начинаем работу с Google Sheets на Python. От регистрации до чтения данных https://habr.com/ru/articles/483302/

